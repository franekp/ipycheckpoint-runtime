on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

name: Create Release

jobs:
  build:
    name: Create Release
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -l {0}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - uses: conda-incubator/setup-miniconda@v2
        with:
          miniconda-version: "latest"
          channels: bioconda, conda-forge, defaults
          use-only-tar-bz2: false
          auto-update-conda: true
          auto-activate-base: true
      - name: Conda init
        run: conda init
      - name: Build jupyterlite distribution
        run: |
          . first-time-setup.sh
          ./build.sh
      - name: Create jupyterlite archive
        run: |
          mv jupyterlite-dist/site notebookpack-runtime
          zip -r notebookpack-runtime-$(echo ${{ github.ref }} | cut -d '/' -f 3).zip notebookpack-runtime
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: Auto-generated release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./notebookpack-runtime-$(echo ${{ github.ref }} | cut -d '/' -f 3).zip
          asset_name: notebookpack-runtime-$(echo ${{ github.ref }} | cut -d '/' -f 3).zip
          asset_content_type: application/zip
